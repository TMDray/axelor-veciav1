pluginManagement {
  repositories {
    mavenCentral() {
      content {
        excludeGroup 'com.axelor'
      }
    }
    maven {
      url 'https://repository.axelor.com/nexus/repository/maven-public/'
    }
  }
  plugins {
    id 'com.axelor.app' version '7.3.7'
  }
}

plugins {
  id 'com.github.node-gradle.node' version '3.5.1' apply false
}


dependencyResolutionManagement {
  repositories {
    mavenCentral() {
      content {
        excludeGroup 'com.axelor'
      }
    }
    maven {
      url 'https://repository.axelor.com/nexus/repository/maven-public/'
    }
    // Declare the Node.js download repository
    ivy {
      name = "Node.js"
      setUrl("https://nodejs.org/dist/")
      patternLayout {
        artifact("v[revision]/[artifact](-v[revision]-[classifier]).[ext]")
      }
      metadataSources {
        artifact()
      }
      content {
        includeModule("org.nodejs", "node")
      }
    }
  }
}

//Include only Phase 1 modules (CRM, Sales, Base)
rootProject.name = "axelor-vecia"

// Modules Phase 1 - Approche minimaliste
def enabledModules = [
  'axelor-base',      // Socle obligatoire (contacts inclus)
  'axelor-crm',       // CRM - Gestion relation client
  'axelor-sale'       // Ventes - Cycle de vente
]

def modules = []
enabledModules.each { moduleName ->
  def moduleDir = file("modules/axelor-open-suite/${moduleName}")
  if (moduleDir.exists() && new File(moduleDir, "build.gradle").exists()) {
    modules.add(moduleDir)
  }
}

// Add custom modules to appModules list
def customModuleDir = file("modules/axelor-open-suite/axelor-vecia-crm")
if (customModuleDir.exists() && new File(customModuleDir, "build.gradle").exists()) {
  modules.add(customModuleDir)
}

gradle.ext.appModules = modules

modules.each { dir ->
  include "modules:$dir.name"
  project(":modules:$dir.name").projectDir = dir
}
